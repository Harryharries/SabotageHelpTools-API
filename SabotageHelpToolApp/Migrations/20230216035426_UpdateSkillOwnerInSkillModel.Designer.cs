// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SabotageHelpToolApp.Data;

#nullable disable

namespace SabotageHelpToolApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230216035426_UpdateSkillOwnerInSkillModel")]
    partial class UpdateSkillOwnerInSkillModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SabotageHelpToolApp.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.CharacterTurnAction", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("TurnActionId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "TurnActionId");

                    b.HasIndex("TurnActionId");

                    b.ToTable("CharacterTurnActions");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("characterId")
                        .HasColumnType("int");

                    b.Property<int?>("reviewersId")
                        .HasColumnType("int");

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("characterId");

                    b.HasIndex("reviewersId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.TurnAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TurnActions");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.Character", b =>
                {
                    b.HasOne("SabotageHelpToolApp.Models.Team", "Team")
                        .WithMany("characters")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.CharacterTurnAction", b =>
                {
                    b.HasOne("SabotageHelpToolApp.Models.Character", "Character")
                        .WithMany("CharacterTurnActions")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SabotageHelpToolApp.Models.TurnAction", "TurnAction")
                        .WithMany("CharacterTurnAction")
                        .HasForeignKey("TurnActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("TurnAction");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.Review", b =>
                {
                    b.HasOne("SabotageHelpToolApp.Models.Character", "character")
                        .WithMany("Reviews")
                        .HasForeignKey("characterId");

                    b.HasOne("SabotageHelpToolApp.Models.Reviewer", "reviewers")
                        .WithMany("Reviews")
                        .HasForeignKey("reviewersId");

                    b.Navigation("character");

                    b.Navigation("reviewers");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.Skill", b =>
                {
                    b.HasOne("SabotageHelpToolApp.Models.Character", "Character")
                        .WithMany("Skills")
                        .HasForeignKey("CharacterId");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.Character", b =>
                {
                    b.Navigation("CharacterTurnActions");

                    b.Navigation("Reviews");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.Reviewer", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.Team", b =>
                {
                    b.Navigation("characters");
                });

            modelBuilder.Entity("SabotageHelpToolApp.Models.TurnAction", b =>
                {
                    b.Navigation("CharacterTurnAction");
                });
#pragma warning restore 612, 618
        }
    }
}
